name: Build Executables

on:
  release:
    types: [published]
  workflow_dispatch:  # Allow manual triggering

jobs:
  build-executables:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            executable: GoogleTakeoutHelper
          - os: windows-latest  
            platform: windows
            executable: GoogleTakeoutHelper.exe
          - os: macos-latest
            platform: macos
            executable: GoogleTakeoutHelper.app

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller>=6.0

    - name: Build executable (Linux/macOS)
      if: matrix.platform != 'windows'
      run: |
        pyinstaller \
          --onefile \
          --windowed \
          --name "GoogleTakeoutHelper" \
          --add-data "src/google_takeout_live_photos:google_takeout_live_photos" \
          --hidden-import tkinter \
          --hidden-import tkinter.filedialog \
          --hidden-import tkinter.messagebox \
          --hidden-import tkinter.scrolledtext \
          --clean \
          src/google_takeout_live_photos/gui_app.py

    - name: Build executable (Windows)
      if: matrix.platform == 'windows'
      run: |
        pyinstaller ^
          --onefile ^
          --windowed ^
          --name "GoogleTakeoutHelper" ^
          --add-data "src/google_takeout_live_photos;google_takeout_live_photos" ^
          --hidden-import tkinter ^
          --hidden-import tkinter.filedialog ^
          --hidden-import tkinter.messagebox ^
          --hidden-import tkinter.scrolledtext ^
          --clean ^
          src/google_takeout_live_photos/gui_app.py

    - name: Test executable (Linux/macOS)
      if: matrix.platform != 'windows'
      run: |
        if [ -f "dist/GoogleTakeoutHelper" ]; then
          echo "✅ Executable created successfully"
          ls -lh dist/GoogleTakeoutHelper
        else
          echo "❌ Executable not found"
          exit 1
        fi

    - name: Test executable (Windows)
      if: matrix.platform == 'windows'
      run: |
        if (Test-Path "dist/GoogleTakeoutHelper.exe") {
          Write-Host "✅ Executable created successfully"
          Get-ChildItem "dist/GoogleTakeoutHelper.exe" | Format-List
        } else {
          Write-Host "❌ Executable not found"
          exit 1
        }

    - name: Prepare release artifact (macOS)
      if: matrix.platform == 'macos'
      run: |
        # Create DMG for better distribution
        mkdir -p dist/release
        cp -r dist/GoogleTakeoutHelper.app dist/release/
        cd dist/release
        zip -r GoogleTakeoutHelper-macOS.zip GoogleTakeoutHelper.app

    - name: Prepare release artifact (Linux)
      if: matrix.platform == 'linux'
      run: |
        mkdir -p dist/release
        cp dist/GoogleTakeoutHelper dist/release/
        cd dist/release
        tar -czf GoogleTakeoutHelper-linux.tar.gz GoogleTakeoutHelper

    - name: Prepare release artifact (Windows)
      if: matrix.platform == 'windows'
      run: |
        mkdir dist/release
        copy dist/GoogleTakeoutHelper.exe dist/release/
        cd dist/release
        powershell Compress-Archive -Path GoogleTakeoutHelper.exe -DestinationPath GoogleTakeoutHelper-windows.zip

    - name: Upload Release Assets
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v2
      with:
        files: dist/release/*

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: GoogleTakeoutHelper-${{ matrix.platform }}
        path: dist/release/
